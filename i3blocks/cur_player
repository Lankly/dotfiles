#!/usr/bin/bash
TIME="$(date +%s)"
TIME="${TIME: -1}"
BODY="$(echo '0189' | grep $TIME)"

# Coloring
START_TAG="<span foreground=\"#00ff00\">"
END_TAG="</span>"
MOUSE_COORD="$(xdotool getmouselocation)"
{
    x=`echo $MOUSE_COORD | grep -Po "(?<=x:)[0-9]*"`
    y=`echo $MOUSE_COORD | grep -Po "(?<=y:)[0-9]*"`
    #echo "$x $y"
    if [ $y -lt 33 ];then
	START_TAG="<span foreground=\"#2f343f\" background=\"#00ff00\">"
    fi
}

# Command to display
{
if [ -z $BODY ]; then
    # Current window's name
    BODY="$(xprop -id $(xprop -root _NET_ACTIVE_WINDOW | cut -d ' ' -f 5) WM_NAME | cut -d '"' -f 2)"
else
    # Current song

    CURSONG="$(lsof -wc vlc | awk '$4~"[0-9]r" && $5=="REG"' | grep -Pi "(flac|m4a|mp3|mp4|wav|wma)$" | sed 's/^.*\(\/home\)/\1/;')"

    # Get metadata from current song
    TAGS=`taffy "$CURSONG"`
    ARTIST=`echo "$TAGS" | grep -Pi "^artist" | sed 's/^artist:\s*//'`
    TITLE=`echo "$TAGS" | grep -Pi "^title" | sed 's/^title:\s*//'`
    TIME=`timedatectl | grep -i "local time" | sed 's/.*time: ... //; s/:.. ...$//; s/ /./;'`
    DURATION=`ffmpeg -i "$CURSONG" 2>&1 | grep "Duration" | cut -d ' ' -f 4 | sed 's/^..:\(..\):\(..\).*/\1m\2s/'`
    BODY="♪ $TITLE — $ARTIST ♪"

    # Get metadata from last song
    LAST_SONG=`cat /home/lan/.config/cur_player/last_song.txt | grep -Pi "^location" | sed 's/^location:\s*//'`
    LAST_ARTIST=`cat /home/lan/.config/cur_player/last_song.txt | grep -Pi "^artist" | sed 's/^artist:\s*//'`
    LAST_TITLE=`cat /home/lan/.config/cur_player/last_song.txt | grep -Pi "^title" | sed 's/^title:\s*//'`
    LAST_TIME=`cat /home/lan/.config/cur_player/last_song.txt | grep -Pi "^time" | sed 's/^time:\s*//'`
    LAST_ALBUM=`cat /home/lan/.config/cur_player/last_song.txt | grep -Pi "^album" | sed 's/^album:\s*//'`
    LAST_DURATION=`cat /home/lan/.config/cur_player/last_song.txt | grep -Pi "^duration" | sed 's/^duration:\s*//'`

    # Submit to last.fm?
    YEAR=`echo $TIME | sed 's/\(....\).*/\1/'`
    MONTH=`echo $TIME | sed 's/.*-\(..\)-.*/\1/'`
    DAY=`echo $TIME | sed 's/.*\(..\)\..*/\1/'`
    HOUR=`echo $TIME | sed 's/.*\(..\):.*/\1/'`
    MINUTE=`echo $TIME | sed 's/.*\(..\)$/\1/'`
    MINUTE=$((10#$MINUTE))

    LAST_YEAR=`echo $LAST_TIME | sed 's/\(....\).*/\1/'`
    LAST_MONTH=`echo $LAST_TIME | sed 's/.*-\(..\)-.*/\1/'`
    LAST_DAY=`echo $LAST_TIME | sed 's/.*\(..\)\..*/\1/'`
    LAST_HOUR=`echo $LAST_TIME | sed 's/.*\(..\):.*/\1/'`
    LAST_MINUTE=`echo $LAST_TIME | sed 's/.*\(..\)$/\1/'`
    LAST_MINUTE=$((10#$LAST_MINUTE))
    LAST_MINUTE_MORE=$((LAST_MINUTE+1))
    if [[ $TITLE != $LAST_TITLE ]]; then
	# Always keep last_song up to date
	printf "location: $TAGS\nduration: $DURATION\ntime: $TIME\n" > /home/lan/.config/cur_player/last_song.txt

	# Enough time needs to have elapsed to scrobble
	if [ $YEAR -gt $LAST_YEAR ] \
	    || [ $MONTH -gt $LAST_MONTH ] \
	    || [ $DAY -gt $LAST_DAY ] \
	    || [ $HOUR -gt $LAST_HOUR ] \
	    || [ $MINUTE -gt $LAST_MINUTE_MORE ]; then
            SCROB_CMD="scrobbler scrobble Lankly \"`echo $LAST_ARTIST | sed 's/"/\\\\"/g;'`\" \"`echo $LAST_TITLE | sed 's/"/\\\\"/g;'`\" $LAST_TIME -a \"`echo $LAST_ALBUM | sed 's/"//\\\\"/'`\" -d $LAST_DURATION"
	    echo $SCROB_CMD > /home/lan/.config/cur_player/last_scrobble.txt
	    eval $SCROB_CMD > /home/lan/.config/cur_player/last_scrobble_status.txt
        fi
    fi
fi
}

# Return
echo "$START_TAG $BODY $END_TAG"

